facet_grid(rows = vars(parent_class), cols = vars(respondent_college), scales = "free") +
labs(x = "Respondent Class", y = "Weighted Proportion", title = "Weighted Proportions of Respondent Class") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
pset4 %>%
group_by(respondent_class, parent_class, respondent_college) %>%
summarise(WeightedProportion = n() / nrow(data)) %>%
# Plotting
ggplot( aes(x = respondent_class, y = WeightedProportion, fill = respondent_class)) +
geom_bar(stat = "identity") +
facet_grid(rows = vars(parent_class), cols = vars(respondent_college), scales = "free") +
labs(x = "Respondent Class", y = "Weighted Proportion", title = "Weighted Proportions of Respondent Class") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
data %>%
group_by(parent_class, respondent_college, respondent_class) %>%
summarise(weighted_proportion = sum(wtssall)) %>%
mutate(weighted_proportion = weighted_proportion / sum(weighted_proportion)) %>%
ggplot(grouped_data, aes(x = respondent_class, y = weighted_proportion, fill = respondent_class)) +
geom_bar(stat = "identity") +
facet_grid(parent_class ~ respondent_college, scales = "free") +
labs(x = "Respondent Class", y = "Weighted Proportion", title = "Weighted Proportion of Respondents by Classes") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
data %>%
group_by(parent_class, respondent_college, respondent_class) %>%
summarise(weighted_proportion = sum(wtssall)) %>%
mutate(weighted_proportion = weighted_proportion / sum(weighted_proportion)) %>%
ggplot(grouped_data, aes(x = respondent_class, y = weighted_proportion, fill = respondent_class)) +
geom_bar(stat = "identity") +
facet_grid(parent_class ~ respondent_college, scales = "free") +
labs(x = "Respondent Class", y = "Weighted Proportion", title = "Weighted Proportion of Respondents by Classes") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
pset4 %>%
group_by(parent_class, respondent_college, respondent_class) %>%
summarise(weighted_proportion = sum(wtssall)) %>%
mutate(weighted_proportion = weighted_proportion / sum(weighted_proportion)) %>%
ggplot(grouped_data, aes(x = respondent_class, y = weighted_proportion, fill = respondent_class)) +
geom_bar(stat = "identity") +
facet_grid(parent_class ~ respondent_college, scales = "free") +
labs(x = "Respondent Class", y = "Weighted Proportion", title = "Weighted Proportion of Respondents by Classes") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
pset4 %>%
group_by(parent_class, respondent_college, respondent_class) %>%
summarise(weighted_proportion = sum(wtssall)) %>%
mutate(weighted_proportion = weighted_proportion / sum(weighted_proportion)) %>%
ggplot(aes(x = respondent_class, y = weighted_proportion, fill = respondent_class)) +
geom_bar(stat = "identity") +
facet_grid(parent_class ~ respondent_college, scales = "free") +
labs(x = "Respondent Class", y = "Weighted Proportion", title = "Weighted Proportion of Respondents by Classes") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
r
r
pset4 %>%
# groupby parent and respondent class
group_by(parent_class, respondent_college, respondent_class) %>%
# summarize to sum weight w/n each group
summarise(weighted_proportion = sum(wtssall)) %>%
mutate(weighted_proportion =
weighted_proportion / sum(weighted_proportion)) %>%
# fixing parent_class for facet label later
mutate(parent_class = gsub(' ', '\n', parent_class)) %>%
ggplot(aes(x = respondent_class,
y = weighted_proportion,
fill = respondent_class)) +
geom_bar(stat = 'identity') +
facet_grid(cols = vars(parent_class),
rows = vars(respondent_college)) +
theme_bw() +
labs(title="Degree Proportion of Respondents by Parent class",
x ="Parent Class",
y = "Proportion of Resopndents with Degrees") +
theme(plot.title = element_text(hjust = 0.5),
legend.position = "none") +
scale_y_continuous(labels = scales::percent)
pset4 %>%
# groupby parent and respondent class
group_by(parent_class, respondent_college, respondent_class) %>%
# summarize to sum weight w/n each group
summarise(weighted_proportion = sum(wtssall)) %>%
mutate(weighted_proportion =
weighted_proportion / sum(weighted_proportion)) %>%
# fixing parent_class for facet label later
mutate(parent_class = gsub(' ', '\n', parent_class)) %>%
ggplot(aes(x = respondent_class,
y = weighted_proportion,
fill = respondent_class)) +
geom_bar(stat = 'identity') +
facet_grid(cols = vars(parent_class),
rows = vars(respondent_college)) +
theme_bw() +
labs(title="Degree Proportion of Respondents by Parent class",
x ="Parent Class",
y = "Proportion of Resopndents with Degrees") +
theme(plot.title = element_text(hjust = 0.5),
legend.position = "none",
axis.text.x = element_text(angle = 45)) +
scale_y_continuous(labels = scales::percent)
pset4 %>%
# groupby parent and respondent class
group_by(parent_class, respondent_college, respondent_class) %>%
# summarize to sum weight w/n each group
summarise(weighted_proportion = sum(wtssall)) %>%
mutate(weighted_proportion =
weighted_proportion / sum(weighted_proportion)) %>%
# fixing parent_class for facet label later
mutate(parent_class = gsub(' ', '\n', parent_class)) %>%
ggplot(aes(x = respondent_class,
y = weighted_proportion,
fill = respondent_class)) +
geom_bar(stat = 'identity') +
facet_grid(cols = vars(parent_class),
rows = vars(respondent_college)) +
theme_bw() +
labs(title="Degree Proportion of Respondents by Parent class",
x ="Parent Class",
y = "Proportion of Resopndents with Degrees") +
theme(plot.title = element_text(hjust = 0.5),
legend.position = "none",
axis.text.x = element_text(angle = 45), hjust=1) +
scale_y_continuous(labels = scales::percent)
pset4 %>%
# groupby parent and respondent class
group_by(parent_class, respondent_college, respondent_class) %>%
# summarize to sum weight w/n each group
summarise(weighted_proportion = sum(wtssall)) %>%
mutate(weighted_proportion =
weighted_proportion / sum(weighted_proportion)) %>%
# fixing parent_class for facet label later
mutate(parent_class = gsub(' ', '\n', parent_class)) %>%
ggplot(aes(x = respondent_class,
y = weighted_proportion,
fill = respondent_class)) +
geom_bar(stat = 'identity') +
facet_grid(cols = vars(parent_class),
rows = vars(respondent_college)) +
theme_bw() +
labs(title="Degree Proportion of Respondents by Parent class",
x ="Parent Class",
y = "Proportion of Resopndents with Degrees") +
theme(plot.title = element_text(hjust = 0.5),
legend.position = "none",
axis.text.x = element_text(angle = 45, hjust=1)) +
scale_y_continuous(labels = scales::percent)
pset4 %>%
# groupby parent and respondent class
group_by(parent_class, respondent_college, respondent_class) %>%
# summarize to sum weight w/n each group
summarise(weighted_proportion = sum(wtssall)) %>%
mutate(weighted_proportion =
weighted_proportion / sum(weighted_proportion)) %>%
# fixing parent_class for facet label later
mutate(parent_class = gsub(' ', '\n', parent_class)) %>%
ggplot(aes(x = respondent_class,
y = weighted_proportion,
fill = respondent_class)) +
geom_bar(stat = 'identity') +
facet_grid(rows = vars(parent_class),
cols = vars(respondent_college)) +
theme_bw() +
labs(title="Degree Proportion of Respondents by Parent class",
x ="Parent Class",
y = "Proportion of Resopndents with Degrees") +
theme(plot.title = element_text(hjust = 0.5),
legend.position = "none",
axis.text.x = element_text(angle = 45, hjust=1)) +
scale_y_continuous(labels = scales::percent)
cols
pset4 %>%
# groupby parent and respondent class
group_by(parent_class, respondent_college, respondent_class) %>%
# summarize to sum weight w/n each group
summarise(weighted_proportion = sum(wtssall)) %>%
mutate(weighted_proportion =
weighted_proportion / sum(weighted_proportion)) %>%
# fixing parent_class for facet label later
mutate(parent_class = gsub(' ', '\n', parent_class)) %>%
ggplot(aes(x = respondent_class,
y = weighted_proportion,
fill = respondent_class)) +
geom_bar(stat = 'identity') +
facet_grid(cols = vars(parent_class),
rows = vars(respondent_college)) +
theme_bw() +
labs(title="Degree Proportion of Respondents by Parent class",
x ="Parent Class",
y = "Proportion of Resopndents with Degrees") +
theme(plot.title = element_text(hjust = 0.5),
legend.position = "none",
axis.text.x = element_text(angle = 45, hjust=1)) +
scale_y_continuous(labels = scales::percent)
pset4 %>%
# groupby parent and respondent class
group_by(parent_class, respondent_college, respondent_class) %>%
# summarize to sum weight w/n each group
summarise(weighted_proportion = sum(wtssall)) %>%
mutate(weighted_proportion =
weighted_proportion / sum(weighted_proportion)) %>%
# fixing parent_class for facet label later
mutate(parent_class = gsub(' ', '\n', parent_class)) %>%
ggplot(aes(x = respondent_class,
y = weighted_proportion,
fill = respondent_class)) +
geom_bar(stat = 'identity') +
facet_grid(cols = vars(parent_class),
rows = vars(respondent_college)) +
theme_bw() +
labs(title="Weighted Proportion of Respondents by class",
x ="Respondent Class",
y = "Weighted Proportion of Respondents") +
theme(plot.title = element_text(hjust = 0.5),
legend.position = "none",
axis.text.x = element_text(angle = 45, hjust=1)) +
scale_y_continuous(labels = scales::percent)
library(tidyverse)
library(dplyr)
library(Hmisc)
pset4 <- readRDS(url("https://info3370.github.io/data/pset4.RDS"))
new_df <- pset4 %>%
# groupby parent and respondent class
group_by(parent_class, respondent_class) %>%
# summarize to sum weight w/n each group
summarize(sum = sum(realrinc), sum_weight = sum(wtssall)) %>%
# group by only parent class
group_by(parent_class) %>%
# mutate?
mutate(proportion_in_parent = sum/sum(sum),
weight_proportion = sum_weight/sum(sum_weight)) %>%
# fixing parent_class for facet label later
mutate(parent_class = gsub(' ', '\n', parent_class))
new_df
new_df %>%
ggplot(aes(x=respondent_class, y=weight_proportion, fill=respondent_class)) +
geom_bar(stat='identity') +
facet_grid(cols= vars(parent_class)) +
theme_bw() +
labs(title="Impact of Class Origin on Life Outcomes",
x ="Respondent Class",
y = "Proportion in Respondent Class") +
theme(plot.title = element_text(hjust = 0.5),
legend.position = "none",
axis.text.x = element_text(angle=45, hjust=1)) +
scale_y_continuous(labels = scales::percent)
median_df <- pset4 %>%
group_by(parent_class) %>%
summarize(weighted_median = Hmisc::wtd.quantile(x = realrinc, weights = wtssall, probs = 0.5))
median_df
median_df %>%
ggplot(aes(x=parent_class, y=weighted_median, fill=parent_class)) +
geom_bar(stat='identity') +
theme_bw() +
labs(title="Median Income of Respondents by Parent class",
x ="Parent Class",
y = "Weighted Median") +
theme(plot.title = element_text(hjust = 0.5),
legend.position= "none")
pset4 %>%
group_by(parent_class, respondent_class) %>%
summarize(median_income = Hmisc::wtd.quantile(x = realrinc, weights = wtssall, probs = 0.5)) %>%
# fixing respondent_class for facet label later
mutate(respondent_class = gsub(' ', '\n', respondent_class)) %>%
# bar graphs
ggplot(aes(x = parent_class, y=median_income, fill=parent_class)) +
geom_bar(stat='identity') +
facet_grid(cols= vars(respondent_class)) +
theme_bw() +
labs(title="Impact of Class Origin on Median Income",
x ="Parent Class",
y = "Median Income of Respondents") +
theme(plot.title = element_text(hjust = 0.5),
legend.position = "none",
axis.text.x = element_text(angle = 45, hjust=1))
pset4 %>%
# summarizing information - by parent_class
group_by(parent_class) %>%
summarize(count_degree = sum(respondent_college),
count = n(),
sum_weight = sum(wtssall)) %>%
# degree * weight / count
mutate(proportion_degree = count_degree/count,
proportion_weight = sum_weight/count,
final_proportion = proportion_degree*proportion_weight) %>%
# creating bar graph
ggplot(aes(x=parent_class, y=proportion_degree, fill=parent_class)) +
geom_bar(stat='identity') +
theme_bw() +
labs(title="Degree Proportion of Respondents by Parent class",
x ="Parent Class",
y = "Proportion of Resopndents with Degrees") +
theme(plot.title = element_text(hjust = 0.5),
legend.position = "none") +
scale_y_continuous(labels = scales::percent)
pset4 %>%
# groupby parent and respondent class
group_by(parent_class, respondent_college, respondent_class) %>%
# summarize to sum weight w/n each group
summarise(weighted_proportion = sum(wtssall)) %>%
mutate(weighted_proportion =
weighted_proportion / sum(weighted_proportion)) %>%
# fixing parent_class for facet label later
mutate(parent_class = gsub(' ', '\n', parent_class)) %>%
ggplot(aes(x = respondent_class,
y = weighted_proportion,
fill = respondent_class)) +
geom_bar(stat = 'identity') +
facet_grid(cols = vars(parent_class),
rows = vars(respondent_college)) +
theme_bw() +
labs(title="Weighted Proportion of Respondents by class",
x ="Respondent Class",
y = "Weighted Proportion of Respondents") +
theme(plot.title = element_text(hjust = 0.5),
legend.position = "none",
axis.text.x = element_text(angle = 45, hjust=1)) +
scale_y_continuous(labels = scales::percent)
library(tidyverse)
library(dplyr)
library(Hmisc)
pset4 <- readRDS(url("https://info3370.github.io/data/pset4.RDS"))
new_df <- pset4 %>%
# groupby parent and respondent class
group_by(parent_class, respondent_class) %>%
# summarize to sum weight w/n each group
summarize(sum = sum(realrinc), sum_weight = sum(wtssall)) %>%
# group by only parent class
group_by(parent_class) %>%
# mutate?
mutate(proportion_in_parent = sum/sum(sum),
weight_proportion = sum_weight/sum(sum_weight)) %>%
# fixing parent_class for facet label later
mutate(parent_class = gsub(' ', '\n', parent_class))
new_df
new_df %>%
ggplot(aes(x=respondent_class, y=weight_proportion, fill=respondent_class)) +
geom_bar(stat='identity') +
facet_grid(cols= vars(parent_class)) +
theme_bw() +
labs(title="Impact of Class Origin on Life Outcomes",
x ="Respondent Class",
y = "Proportion in Respondent Class") +
theme(plot.title = element_text(hjust = 0.5),
legend.position = "none",
axis.text.x = element_text(angle=45, hjust=1)) +
scale_y_continuous(labels = scales::percent)
median_df <- pset4 %>%
group_by(parent_class) %>%
summarize(weighted_median = Hmisc::wtd.quantile(x = realrinc, weights = wtssall, probs = 0.5))
median_df
median_df %>%
ggplot(aes(x=parent_class, y=weighted_median, fill=parent_class)) +
geom_bar(stat='identity') +
theme_bw() +
labs(title="Median Income of Respondents by Parent class",
x ="Parent Class",
y = "Weighted Median") +
theme(plot.title = element_text(hjust = 0.5),
legend.position= "none")
pset4 %>%
group_by(parent_class, respondent_class) %>%
summarize(median_income = Hmisc::wtd.quantile(x = realrinc, weights = wtssall, probs = 0.5)) %>%
# fixing respondent_class for facet label later
mutate(respondent_class = gsub(' ', '\n', respondent_class)) %>%
# bar graphs
ggplot(aes(x = parent_class, y=median_income, fill=parent_class)) +
geom_bar(stat='identity') +
facet_grid(cols= vars(respondent_class)) +
theme_bw() +
labs(title="Impact of Class Origin on Median Income",
x ="Parent Class",
y = "Median Income of Respondents") +
theme(plot.title = element_text(hjust = 0.5),
legend.position = "none",
axis.text.x = element_text(angle = 45, hjust=1))
pset4 %>%
# summarizing information - by parent_class
group_by(parent_class) %>%
summarize(count_degree = sum(respondent_college),
count = n(),
sum_weight = sum(wtssall)) %>%
# degree * weight / count
mutate(proportion_degree = count_degree/count,
proportion_weight = sum_weight/count,
final_proportion = proportion_degree*proportion_weight) %>%
# creating bar graph
ggplot(aes(x=parent_class, y=proportion_degree, fill=parent_class)) +
geom_bar(stat='identity') +
theme_bw() +
labs(title="Degree Proportion of Respondents by Parent class",
x ="Parent Class",
y = "Proportion of Resopndents with Degrees") +
theme(plot.title = element_text(hjust = 0.5),
legend.position = "none") +
scale_y_continuous(labels = scales::percent)
pset4 %>%
# groupby parent and respondent class
group_by(parent_class, respondent_college, respondent_class) %>%
# summarize to sum weight w/n each group
summarise(weighted_proportion = sum(wtssall)) %>%
mutate(weighted_proportion =
weighted_proportion / sum(weighted_proportion)) %>%
# fixing parent_class for facet label later
mutate(parent_class = gsub(' ', '\n', parent_class)) %>%
ggplot(aes(x = respondent_class,
y = weighted_proportion,
fill = respondent_class)) +
geom_bar(stat = 'identity') +
facet_grid(cols = vars(parent_class),
rows = vars(respondent_college)) +
theme_bw() +
labs(title="Weighted Proportion of Respondents by class",
x ="Respondent Class",
y = "Weighted Proportion of Respondents") +
theme(plot.title = element_text(hjust = 0.5),
legend.position = "none",
axis.text.x = element_text(angle = 45, hjust=1)) +
scale_y_continuous(labels = scales::percent)
new_df %>%
ggplot(aes(x=respondent_class, y=weight_proportion, fill=respondent_class)) +
geom_bar(stat='identity') +
facet_grid(cols= vars(parent_class)) +
theme_bw() +
labs(title="Impact of Class Origin on Life Outcomes",
x ="Respondent Class",
y = "Proportion in Respondent Class") +
theme(plot.title = element_text(hjust = 0.5),
legend.position = "none",
axis.text.x = element_text(angle=45, hjust=1)) +
scale_y_continuous(labels = scales::percent)
new_df <- pset4 %>%
# groupby parent and respondent class
group_by(parent_class, respondent_class) %>%
# summarize to sum weight w/n each group
summarize(sum = sum(realrinc), sum_weight = sum(wtssall)) %>%
# group by only parent class
group_by(parent_class) %>%
# mutate?
mutate(proportion_in_parent = sum/sum(sum),
weight_proportion = sum_weight/sum(sum_weight)) %>%
# fixing parent_class for facet label later
mutate(parent_class = gsub(' ', '\n', parent_class))
new_df %>%
ggplot(aes(x=respondent_class, y=weight_proportion, fill=respondent_class)) +
geom_bar(stat='identity') +
facet_grid(cols= vars(parent_class)) +
theme_bw() +
labs(title="Impact of Class Origin on Life Outcomes",
x ="Respondent Class",
y = "Proportion in Respondent Class") +
theme(plot.title = element_text(hjust = 0.5),
legend.position = "none",
axis.text.x = element_text(angle=45, hjust=1)) +
scale_y_continuous(labels = scales::percent)
new_df <- pset4 %>%
# groupby parent and respondent class
group_by(parent_class, respondent_class) %>%
# summarize to sum weight w/n each group
summarize(sum = sum(realrinc), sum_weight = sum(wtssall)) %>%
# group by only parent class
group_by(parent_class) %>%
# mutate?
mutate(proportion_in_parent = sum/sum(sum),
weight_proportion = sum_weight/sum(sum_weight)) %>%
# fixing parent_class for facet label later
mutate(parent_class = gsub(' ', '\n', parent_class))
new_df
new_df %>%
ggplot(aes(x=respondent_class, y=weight_proportion, fill=respondent_class)) +
geom_bar(stat='identity') +
facet_grid(cols= vars(parent_class)) +
theme_bw() +
labs(title="Impact of Class Origin on Life Outcomes",
x ="Respondent Class",
y = "Proportion in Respondent Class") +
theme(plot.title = element_text(hjust = 0.5),
legend.position = "none",
axis.text.x = element_text(angle=45, hjust=1)) +
scale_y_continuous(labels = scales::percent)
library(Hmisc)
library(tidyverse)
library(dplyr)
pset4 <- readRDS(url("https://info3370.github.io/data/pset4.RDS"))
shiny::runApp('D:/Caitlin/School/JupyterNotebooks/5260-final')
runApp('D:/Caitlin/School/JupyterNotebooks/5260-final')
install.packages("leaflet")
runApp('D:/Caitlin/School/JupyterNotebooks/5260-final')
shiny::runApp('D:/Caitlin/School/JupyterNotebooks/5260-final')
runApp('D:/Caitlin/School/JupyterNotebooks/5260-final')
runApp('D:/Caitlin/School/JupyterNotebooks/5260-final')
install.packages("globe4r")
runApp('D:/Caitlin/School/JupyterNotebooks/5260-final')
install.packages("threejs")
runApp('D:/Caitlin/School/JupyterNotebooks/5260-final')
shiny::runApp('D:/Caitlin/School/JupyterNotebooks/5260-final')
leaflet(data = ewaste) %>%
addTiles() %>%
addCircleMarkers(data = ewaste,
lat = ~latitude, lng = ~longitude,
radius = 3, clusterOptions = markerClusterOptions(),
popup = ~paste(
"<br>Country: ", ifelse(is.na(country), "N/A", country),
"<br>Main Commod: ", ifelse(is.na(commod1), "N/A", commod1),
'<br><a href="https://www.google.com/maps?q=', latitude, ',', longitude, '" target="_blank">Open in Google Map</a>'
))
runApp('D:/Caitlin/School/JupyterNotebooks/5260-final')
setwd('D:/Caitlin/School/JupyterNotebooks/5260-final')
ewaste <- read.csv('ewaste cleaned.csv')
ewaste <- ewaste %>%
mutate(Latitude = as.numeric(Latitude),
Longitude = as.numeric(Longitude),
ewaste_generated_capita = as.numeric(E.WASTE.GENERATED..KG.CAPITA.))
view(ewaste)
View(ewaste)
runApp()
